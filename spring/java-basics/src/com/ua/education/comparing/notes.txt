 В java для нестандартого способа сортировки
  существуют 2 специальных механизма сравнения
  interface Comparable & interface Comparator

 Comparable - имплементируется напрямую на классе,как его расширение что важно,
     объекты которого подлежат сравнению.
     Контракт этого интерфейса требует реализовать метод compareTo(<T> another)
     который принимает в парамертах объект и выполняет условия сравнения
     описанные внутри этого метода. вернет 0/1/-1 еквивалент равно/больше/меньше.

 Comparator - имплементируется на специально созданном классе - сравнителе
     например - EmployeeIdComparator(производит сравнение только по Id)
     Контракт требует реализовать метод compareTo(<T> firstObject, <T> secondObject);
     который принимает два объекта поделжащих сравнению.
     вернет 0/1/-1 еквивалент равно/больше/меньше.

Как это работает - Класс объекты которого предстоит сравнивать должен
            должен реализовывать интерфейс Comparable нужного условия сортировки.
    НО! если нужно использовать
          дополнительные способы сортировок можно создать
          дополнительные объекты - сравниватели(Comparators)
          и далее передавать их в метод Collections.sort(list, new EmployeeIdComparator)

    так же это используется если мы не можем изменить класс который предстоит сравнивать
    например класс - String - уже реализует Comparable.
    Если мы хотим изменить способ сравнения строк нам нужно создать
    отдльный объект - сравниватель строк - StringComparator.










